''' This program is only workable on CodeSkulptor
Question: Given any initial natural number, consider the sequence of numbers 
generated by repeatedly following the rule:

divide by two if the number is even or
multiply by 3 and add 1 if the number is odd.

The Collatz conjecture states that this sequence always terminates 
at 1. For example, the sequence generated by 23 is:

23, 70, 35, 106, 53, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1

Write a Python program that takes a global variable n and uses 
a timer callback to repeatedly apply the rule above to n. 

What is the largest number in the sequence generated by this starting value?
'''
# import module
import simplegui

# initial the value of global variables
def init(inp):
    global largest, largest_temp, num, count, start
    largest_temp = inp
    largest = inp
    start = inp
    num = start
    count = 1

# Computer the temporary largest number in each round
def compute(num):
    global largest_temp
    while num != 1:
        if num % 2 == 0:
            num = num / 2
        else:
            num = num * 3 + 1
            if num > largest_temp:
                largest_temp = num
    return largest_temp

# Update and find the largest number in all rounds
def update():
    global count, largest, largest_temp, start
    count = count + 1
    if count > start:
        timer.stop()
        print largest
    else:
        compute(num)
        if largest_temp > largest:
            largest = largest_temp

# creat and start timer
timer = simplegui.create_timer(1, update)
timer.start()

# Testing
init(217)
